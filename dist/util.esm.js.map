{"version":3,"file":"util.esm.js","sources":["../src/lib/help.ts","../src/core/number.ts","../src/core/obj-array.ts","../src/core/obj-array-function.ts","../node_modules/camel-data/dist/camel.esm.js","../src/core/string.ts","../src/core/index.ts","../src/index.js"],"sourcesContent":["/**\n * @desc help collection\n */\n// tslint:disable no-any no-safe-any\n\nconst isType: Function = (value: any, typing: string): boolean => {\n    return Object.prototype.toString.call(value) === `[object ${typing}]`;\n};\n\nexport function isString(value: any): value is string {\n    return isType(value, 'String');\n}\n\nexport function isArray(value: any): value is string {\n    return isType(value, 'Array');\n}\n\nexport function isNumber(value: any): value is string {\n    return isType(value, 'Number');\n}\n\nexport function isObject(value: any): value is string {\n    return isType(value, 'Object');\n}\n","/**\n * @desc number util\n */\n\n// tslint:disable no-any no-unsafe-any\nimport { isString } from '@/lib/help';\n\nexport default class LNumber extends Number {\n    /**\n     * is a string number like '123'\n     */\n    public isStrNumber(val: any): boolean {\n        return isString(val) && `${parseFloat(val)}` === val;\n    }\n\n    /**\n     * is a number (expect NaN)\n     */\n    public isNumber(val: any): boolean {\n        return (\n            !this.isNaN(val) &&\n            Object.prototype.toString.call(val) === '[object Number]'\n        );\n    }\n\n    /**\n     * is NaN\n     */\n    public isNaN(val: any): boolean {\n        return Number.isNaN(val);\n    }\n\n    /**\n     * split a number etc: input 123456 output 123,456\n     * @param val input value string-number or number\n     * @param num split num\n     * @param key split key\n     */\n    public split(val: string | number, num: number, key: string): string {\n        if (!this.isStrNumber(val) && !this.isNumber(val)) {\n            throw new Error('illeagle input for number.split');\n        }\n\n        if ((<string>val).length < num) {\n            return <string>val;\n        }\n\n        let value: string = '';\n        let dot: string = '';\n        if (this.isNumber(val)) {\n            value = val.toString();\n        } else {\n            value = <string>val;\n        }\n\n        // float\n        if (value.indexOf('.') !== -1) {\n            dot = value.split('.')[1];\n            value = value.split('.')[0];\n        }\n        let flag: number = 0;\n        let result: string = '';\n        for (let i: number = 0; i < value.length - 1; i = i + 1) {\n            flag = i % num;\n            result = value[value.length - i - 1] + result;\n            if (flag === num - 1) {\n                result = `${key}${result}`;\n            }\n        }\n        result = value[0] + result;\n\n        return dot ? `${result}.${dot}` : result;\n    }\n\n    public percent(val: number | string, fixed?: number): string {\n        let value!: number;\n        if (isString(val)) {\n            value = parseFloat(val);\n        } else {\n            value = val;\n        }\n\n        return fixed ? `${(value * 100).toFixed(fixed)}%` : `${value * 100}%`;\n    }\n}\n","/**\n * @desc boject-aray [{}]\n */\n\n// tslint:disable no-any no-safe-any\n\nimport { isArray, isObject } from '@/lib/help';\nimport { IObj } from '@/lib/interface';\n\nexport default class ObjArray {\n    public value: IObj[];\n\n    constructor(val: IObj[]) {\n        this.check(val);\n        this.value = val;\n    }\n\n    public static GROUP(key: string, arr: any[]): ObjArray {\n        const result: IObj = {};\n        const resultArr: IObj[] = [];\n        for (const i of arr) {\n            if (i.hasOwnProperty(key)) {\n                // 必须有key\n                if (result.hasOwnProperty(i[key])) {\n                    // result 中有这个key了\n                    Object.assign(result[i[key]], i);\n                } else {\n                    result[i[key]] = i;\n                }\n            }\n        }\n        const keys: string[] = Object.keys(result);\n        for (const i of keys) {\n            resultArr.push(result[i]);\n        }\n\n        return new ObjArray(resultArr);\n    }\n\n    public valueOf(): any[] {\n        return this.value;\n    }\n\n    public key(key: string): any[] {\n        return this.value.map((v: IObj): any => v[key]);\n    }\n\n    public findOne(key: string, value: any): IObj {\n        return this.value.find((v: IObj): any => v[key] === value);\n    }\n\n    // check when use as js util\n    private check(val: IObj[]): void {\n        if (!isArray(val)) {\n            throw new Error('The Obj Array must be array');\n        }\n\n        val.map((v: object) => {\n            if (!isObject(v)) {\n                throw new Error('The key in Obj Array must be object');\n            }\n        });\n    }\n}\n","/**\n * @desc obj-array function\n */\n// tslint:disable no-any no-safe-any\n\nimport ObjArray from '@/core/obj-array';\nimport { IObj } from '@/lib/interface';\n\nexport default {\n    group(key: string, arr: any[]): ObjArray {\n        const result: IObj = {};\n        const resultArr: IObj[] = [];\n        for (const i of arr) {\n            if (i.hasOwnProperty(key)) {\n                // 必须有key\n                if (result.hasOwnProperty(i[key])) {\n                    // result 中有这个key了\n                    Object.assign(result[i[key]], i);\n                } else {\n                    result[i[key]] = i;\n                }\n            }\n        }\n        const keys: string[] = Object.keys(result);\n        for (const i of keys) {\n            resultArr.push(result[i]);\n        }\n\n        debugger;\n        return new ObjArray(resultArr);\n    },\n};\n","/**\r\n * @description type help\r\n */\n// tslint:disable no-any no-unsafe-any\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\nfunction isObject(obj) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\n/**\r\n * @description data transform to camel\r\n */\nvar trans = (function (input) {\n    return input.replace(/[-_\\.][^-_\\.]/g, function (match) {\n        return match.charAt(1).toUpperCase();\n    });\n});\n\n/**\r\n * @description canel\r\n */\n// tslint:disable no-any no-unsafe-any\nvar camelTrans = function camelTrans(input) {\n    if (isArray(input)) {\n        // type ICamel[]\n        return input.map(function (v) {\n            return camelTrans(v);\n        });\n        // } else if (isCamel(input)) {\n    } else if (isObject(input)) {\n        // typ ICamel\n        var result = {};\n        var keys = Object.keys(input);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var i = _step.value;\n\n                if (isObject(input[i])) {\n                    result[camelTrans(i)] = camelTrans(input[i]);\n                } else if (isArray(input[i])) {\n                    // default not to trans Array in object key\n                    // as it may just be a value\n                    result[camelTrans(i)] = input[i];\n                } else {\n                    result[camelTrans(i)] = input[i];\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return result;\n    } else if (isString(input)) {\n        // string\n        return trans(input);\n    } else {\n        return input;\n    }\n};\n\nexport default camelTrans;\n//# sourceMappingURL=camel.esm.js.map\n","/**\n * @desc string util\n */\n\nimport { isString } from '@/lib/help';\nimport camelTrans from 'camel-data';\n\nexport default class LString extends String {\n    public camel(val: string): string {\n        if (!isString(val)) {\n            throw new Error('illeagle input for string.camel');\n        }\n\n        return <string>camelTrans(val);\n    }\n}\n","/**\n * @desc core\n */\n\nimport LNumber from '@/core/number';\nimport ObjArray from '@/core/obj-array';\nimport objArray from '@/core/obj-array-function';\nimport LString from '@/core/string';\n\nexport default {\n    number: ((): LNumber => {\n        return new LNumber();\n    })(),\n    string: ((): LString => {\n        return new LString();\n    })(),\n    objArray,\n    ObjArray,\n};\n","/**\n * @desc webpack entry\n */\nimport core from 'Core/index';\nimport ObjArray from 'Core/obj-array';\nimport objArray from 'Core/obj-array-function';\nimport Number from 'Core/number';\nimport String from 'Core/string';\n\nexport default core;\n\nexport { objArray, ObjArray };\n\nexport const number = new Number();\n\nexport const string = new String();\n"],"names":["isType","value","typing","Object","prototype","toString","call","val","isString","parseFloat","isNaN","Number","num","key","isStrNumber","isNumber","Error","length","dot","indexOf","split","flag","result","i","fixed","toFixed","check","map","v","find","isArray","isObject","arr","resultArr","hasOwnProperty","assign","keys","push","ObjArray","camelTrans","String","LNumber","LString","number","string"],"mappings":"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"}